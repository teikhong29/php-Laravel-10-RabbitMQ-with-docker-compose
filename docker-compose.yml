version: '3.4'

services:
  app:
    build: 
      context: .
      dockerfile: /dockerfile/app.dockerfile
    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - "mysql"
      - "rabbitmq"
    networks:
      - internal
  web:
    build:
        context: .
        dockerfile: /dockerfile/web.dockerfile
    working_dir: /var/www
    volumes:
        - ./:/var/www
    depends_on:
        - "app"
    ports:
        - 80:80
    networks:
      - internal
  mysql:
    container_name: mysql-task3-container
    restart: always
    image: mysql/mysql-server:latest
    ports:
    - 3306:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./db-data:/var/lib/mysql
    networks:
      - internal
  redis:
    image: redis:latest
    container_name: app_redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - internal
  rabbitmq:
    build: 
      context: .
      dockerfile: /dockerfile/rabbitmq.dockerfile
    container_name: rabbitmq
    restart: always
    ports:
      # AMQP protocol port
      - 5672:5672
      # HTTP management UI
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    networks:
      - internal
networks:
  internal:
    driver: bridge
    name: task3-network

volumes:
    dbdata: